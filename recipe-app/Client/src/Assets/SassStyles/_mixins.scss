@mixin flex {
    display: flex;
    justify-content: center;
    align-items: center;
}

@mixin box {
    border: $border;
    box-shadow: 6px 6px 0px 0px rgba(0, 0, 0, 0.75);
    border-radius: 10px;
}

@mixin colorBox {
    border: $border;
    box-shadow: 5px 5px 0px 0px $green2,
    7px 7px 0px 0px rgb(12, 72, 10);
    border-radius: 10px;
}

@mixin button {
    border: $border;
    box-shadow: $box-shadow;
    border-radius: 2px;
    cursor: pointer;
    padding: 10px;
    transition: ease-in-out 0.3s;
    &:hover {
        transform: scale(1.1);
        border: $green solid 2px;
        box-shadow: 4px 4px 0px 0px rgba($green, 0.75);
    }
}

@mixin form {
    position: relative;
    outline: none;
    width: clamp(300px, 40vw, 300px);
    flex-direction: column;
    margin: 2em;
    gap: 1em;
}

@mixin label {
    width: 100%;
    font-size: 1.5rem;
}

@mixin input {
    height: 40px;
    outline: none;
    padding: 0 0.5em;
    margin-bottom: 1.5em;
    width: 90%;
    font-family: inherit;
    font-size: 1rem;
    border: $border;
    border-radius: $border-radius-sm;
    box-shadow: $box-shadow;
}

@mixin submitButton {
    font-size: 1.5rem;
    margin: -1em;
    @include button;
    border-radius: $border-radius-sm;
    padding: 0.5em 1.5em;
}

@mixin backButton {
    cursor: pointer;
    font-size: 1.5rem;
    position: absolute;
    right: 12px;
    top: 2px;
}

/*  MEDIA QUERIES */
$breakpoints: (
    "sm": 480px,
    "md": 720px,
    "lg": 960px,
    "xl": 1190px,
);

/* use content so we can choose properties when using the mixin instead of hardcoding */
@mixin sm {
    @media (max-width: map-get($breakpoints, "sm")) {
        @content;
    }
}

@mixin md {
    @media (max-width: map-get($breakpoints, "md")) {
        @content;
    }
}

@mixin lg {
    @media (max-width: map-get($breakpoints, "lg")) {
        @content;
    }
}

@mixin xl {
    @media (max-width: map-get($breakpoints, "xl")) {
        @content;
    }
}

/* mixin for specific breakpoint (flexible) */
@mixin breakpoint($bp: 0) {
    @media (min-width: $bp) {
        @content;
    }
}
